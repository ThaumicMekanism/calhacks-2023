{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { create } from \"apisauce\";\nimport { DEFAULT_API_CONFIG } from \"./api-config\";\n\n/**\n * Manages all requests to the API.\n */\nexport class Api {\n  /**\n   * Creates the api.\n   *\n   * @param config The configuration to use.\n   */\n  constructor(config = DEFAULT_API_CONFIG) {\n    /**\n     * The underlying apisauce instance which performs the requests.\n     */\n    _defineProperty(this, \"apisauce\", void 0);\n    /**\n     * Configurable options.\n     */\n    _defineProperty(this, \"config\", void 0);\n    this.config = config;\n  }\n\n  /**\n   * Sets up the API.  This will be called during the bootup\n   * sequence and will happen before the first React component\n   * is mounted.\n   *\n   * Be as quick as possible in here.\n   */\n  setup() {\n    // construct the apisauce instance\n    this.apisauce = create({\n      baseURL: this.config.url,\n      timeout: this.config.timeout,\n      headers: {\n        Accept: \"application/json\"\n      }\n    });\n  }\n}","map":{"version":3,"names":["create","DEFAULT_API_CONFIG","Api","constructor","config","_defineProperty","setup","apisauce","baseURL","url","timeout","headers","Accept"],"sources":["/usr/src/app/services/api/api.ts"],"sourcesContent":["import { ApisauceInstance, create } from \"apisauce\";\nimport { ApiConfig, DEFAULT_API_CONFIG } from \"./api-config\";\n\n/**\n * Manages all requests to the API.\n */\nexport class Api {\n  /**\n   * The underlying apisauce instance which performs the requests.\n   */\n  apisauce: ApisauceInstance;\n\n  /**\n   * Configurable options.\n   */\n  config: ApiConfig;\n\n  /**\n   * Creates the api.\n   *\n   * @param config The configuration to use.\n   */\n  constructor(config: ApiConfig = DEFAULT_API_CONFIG) {\n    this.config = config;\n  }\n\n  /**\n   * Sets up the API.  This will be called during the bootup\n   * sequence and will happen before the first React component\n   * is mounted.\n   *\n   * Be as quick as possible in here.\n   */\n  setup() {\n    // construct the apisauce instance\n    this.apisauce = create({\n      baseURL: this.config.url,\n      timeout: this.config.timeout,\n      headers: {\n        Accept: \"application/json\"\n      }\n    });\n  }\n}\n"],"mappings":";;;AAAA,SAA2BA,MAAM,QAAQ,UAAU;AACnD,SAAoBC,kBAAkB,QAAQ,cAAc;;AAE5D;AACA;AACA;AACA,OAAO,MAAMC,GAAG,CAAC;EAWf;AACF;AACA;AACA;AACA;EACEC,WAAWA,CAACC,MAAiB,GAAGH,kBAAkB,EAAE;IAfpD;AACF;AACA;IAFEI,eAAA;IAKA;AACF;AACA;IAFEA,eAAA;IAWE,IAAI,CAACD,MAAM,GAAGA,MAAM;EACtB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEE,KAAKA,CAAA,EAAG;IACN;IACA,IAAI,CAACC,QAAQ,GAAGP,MAAM,CAAC;MACrBQ,OAAO,EAAE,IAAI,CAACJ,MAAM,CAACK,GAAG;MACxBC,OAAO,EAAE,IAAI,CAACN,MAAM,CAACM,OAAO;MAC5BC,OAAO,EAAE;QACPC,MAAM,EAAE;MACV;IACF,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"module"}