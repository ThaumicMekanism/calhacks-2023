{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nexports.__esModule = true;\nexports.pathToRegexp = exports[\"default\"] = exports.customRouteMatcherOptions = exports.matcherOptions = void 0;\nvar pathToRegexp = _interopRequireWildcard(require(\"next/dist/compiled/path-to-regexp\"));\nexports.pathToRegexp = pathToRegexp;\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n  return cache;\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nvar matcherOptions = {\n  sensitive: false,\n  delimiter: '/'\n};\nexports.matcherOptions = matcherOptions;\nvar customRouteMatcherOptions = _objectSpread(_objectSpread({}, matcherOptions), {}, {\n  strict: true\n});\nexports.customRouteMatcherOptions = customRouteMatcherOptions;\nvar _default = function _default() {\n  var customRoute = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return function (path) {\n    var keys = [];\n    var matcherRegex = pathToRegexp.pathToRegexp(path, keys, customRoute ? customRouteMatcherOptions : matcherOptions);\n    var matcher = pathToRegexp.regexpToFunction(matcherRegex, keys);\n    return function (pathname, params) {\n      var res = pathname == null ? false : matcher(pathname);\n      if (!res) {\n        return false;\n      }\n      if (customRoute) {\n        for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n          var key = _keys[_i];\n          // unnamed params should be removed as they\n          // are not allowed to be used in the destination\n          if (typeof key.name === 'number') {\n            delete res.params[key.name];\n          }\n        }\n      }\n      return _objectSpread(_objectSpread({}, params), res.params);\n    };\n  };\n};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../../../next-server/lib/router/utils/path-match.ts"],"names":["matcherOptions","sensitive","delimiter","customRouteMatcherOptions","strict","customRoute","path","keys","matcherRegex","pathToRegexp","matcher","regexpToFunction","pathname","params","res","key","name"],"mappings":";;;;;;;AAAA,IAAA,YAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,mCAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIO,IAAMA,cACc,GAAG;EAC5BC,SAAS,EAAE,KADiB;EAE5BC,SAAS,EAAE;AAFiB,CADvB;;AAMA,IAAMC,yBACc,GAAA,aAAA,CAAA,aAAA,KACtBH,cADyB;EAE5BI,MAAM,EAAE;AAFoB,EADvB;;eAMQ,S,WAAyB;EAAA,IAAxBC,WAAW,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,KAAf;EACb,OAAQC,UAAAA,IAAD,EAAkB;IACvB,IAAMC,IAAwB,GAAG,EAAjC;IACA,IAAMC,YAAY,GAAGC,YAAY,CAACA,YAAbA,CACnBH,IADmBG,EAEnBF,IAFmBE,EAGnBJ,WAAW,GAAGF,yBAAH,GAA+BH,cAHvBS,CAArB;IAKA,IAAMC,OAAO,GAAGD,YAAY,CAACE,gBAAbF,CAA8BD,YAA9BC,EAA4CF,IAA5CE,CAAhB;IAEA,OAAO,UAACG,QAAD,EAAsCC,MAAtC,EAAuD;MAC5D,IAAMC,GAAG,GAAGF,QAAQ,IAAI,IAAZA,GAAmB,KAAnBA,GAA2BF,OAAO,CAACE,QAAD,CAA9C;MACA,IAAI,CAACE,GAAL,EAAU;QACR,OAAO,KAAP;MACD;MAED,IAAIT,WAAJ,EAAiB;QACf,SAAA,EAAA,MAAA,KAAA,GAAkBE,IAAlB,EAAA,EAAA,GAAA,KAAA,CAAA,MAAA,EAAA,EAAA,IAAwB;UAAnB,IAAMQ,GAAX,GAAA,KAAA,CAAA,EAAA;UACE;UACA;UACA,IAAI,OAAOA,GAAG,CAACC,IAAX,KAAoB,QAAxB,EAAkC;YAChC,OAAQF,GAAG,CAACD,MAAL,CAAoBE,GAAG,CAACC,IAAxB,CAAP;UACD;QACF;MACF;MAED,OAAA,aAAA,CAAA,aAAA,KAAYH,MAAL,GAAgBC,GAAG,CAACD,MAA3B;IACD,CAjBD;EAkBD,CA3BD;AA4BD,C","sourcesContent":["import * as pathToRegexp from 'next/dist/compiled/path-to-regexp'\n\nexport { pathToRegexp }\n\nexport const matcherOptions: pathToRegexp.TokensToRegexpOptions &\n  pathToRegexp.ParseOptions = {\n  sensitive: false,\n  delimiter: '/',\n}\n\nexport const customRouteMatcherOptions: pathToRegexp.TokensToRegexpOptions &\n  pathToRegexp.ParseOptions = {\n  ...matcherOptions,\n  strict: true,\n}\n\nexport default (customRoute = false) => {\n  return (path: string) => {\n    const keys: pathToRegexp.Key[] = []\n    const matcherRegex = pathToRegexp.pathToRegexp(\n      path,\n      keys,\n      customRoute ? customRouteMatcherOptions : matcherOptions\n    )\n    const matcher = pathToRegexp.regexpToFunction(matcherRegex, keys)\n\n    return (pathname: string | null | undefined, params?: any) => {\n      const res = pathname == null ? false : matcher(pathname)\n      if (!res) {\n        return false\n      }\n\n      if (customRoute) {\n        for (const key of keys) {\n          // unnamed params should be removed as they\n          // are not allowed to be used in the destination\n          if (typeof key.name === 'number') {\n            delete (res.params as any)[key.name]\n          }\n        }\n      }\n\n      return { ...params, ...res.params }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}