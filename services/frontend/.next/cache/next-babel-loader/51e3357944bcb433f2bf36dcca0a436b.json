{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nexports.__esModule = true;\nexports.defaultHead = defaultHead;\nexports[\"default\"] = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _sideEffect = _interopRequireDefault(require(\"./side-effect\"));\nvar _ampContext = require(\"./amp-context\");\nvar _headManagerContext = require(\"./head-manager-context\");\nvar _amp = require(\"./amp\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n  return cache;\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction defaultHead() {\n  var inAmpMode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var head = [/*#__PURE__*/_react[\"default\"].createElement(\"meta\", {\n    charSet: \"utf-8\"\n  })];\n  if (!inAmpMode) {\n    head.push( /*#__PURE__*/_react[\"default\"].createElement(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width\"\n    }));\n  }\n  return head;\n}\nfunction onlyReactElement(list, child) {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list;\n  } // Adds support for React.Fragment\n  if (child.type === _react[\"default\"].Fragment) {\n    return list.concat(_react[\"default\"].Children.toArray(child.props.children).reduce(function (fragmentList, fragmentChild) {\n      if (typeof fragmentChild === 'string' || typeof fragmentChild === 'number') {\n        return fragmentList;\n      }\n      return fragmentList.concat(fragmentChild);\n    }, []));\n  }\n  return list.concat(child);\n}\nvar METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']; /*\n                                                              returns a function for filtering head child elements\n                                                              which shouldn't be duplicated, like <title/>\n                                                              Also adds support for deduplicated `key` properties\n                                                              */\nfunction unique() {\n  var keys = new Set();\n  var tags = new Set();\n  var metaTypes = new Set();\n  var metaCategories = {};\n  return function (h) {\n    var isUnique = true;\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      var key = h.key.slice(h.key.indexOf('$') + 1);\n      if (keys.has(key)) {\n        isUnique = false;\n      } else {\n        keys.add(key);\n      }\n    } // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false;\n        } else {\n          tags.add(h.type);\n        }\n        break;\n      case 'meta':\n        for (var i = 0, len = METATYPES.length; i < len; i++) {\n          var metatype = METATYPES[i];\n          if (!h.props.hasOwnProperty(metatype)) continue;\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false;\n            } else {\n              metaTypes.add(metatype);\n            }\n          } else {\n            var category = h.props[metatype];\n            var categories = metaCategories[metatype] || new Set();\n            if (categories.has(category)) {\n              isUnique = false;\n            } else {\n              categories.add(category);\n              metaCategories[metatype] = categories;\n            }\n          }\n        }\n        break;\n    }\n    return isUnique;\n  };\n} /**\n  *\n  * @param headElements List of multiple <Head> instances\n  */\nfunction reduceComponents(headElements, props) {\n  return headElements.reduce(function (list, headElement) {\n    var headElementChildren = _react[\"default\"].Children.toArray(headElement.props.children);\n    return list.concat(headElementChildren);\n  }, []).reduce(onlyReactElement, []).reverse().concat(defaultHead(props.inAmpMode)).filter(unique()).reverse().map(function (c, i) {\n    var key = c.key || i;\n    if (process.env.__NEXT_OPTIMIZE_FONTS && !props.inAmpMode) {\n      if (c.type === 'link' && c.props['href'] &&\n      // TODO(prateekbh@): Replace this with const from `constants` when the tree shaking works.\n      ['https://fonts.googleapis.com/css'].some(function (url) {\n        return c.props['href'].startsWith(url);\n      })) {\n        var newProps = _objectSpread({}, c.props || {});\n        newProps['data-href'] = newProps['href'];\n        newProps['href'] = undefined;\n        return /*#__PURE__*/_react[\"default\"].cloneElement(c, newProps);\n      }\n    }\n    return /*#__PURE__*/_react[\"default\"].cloneElement(c, {\n      key: key\n    });\n  });\n} /**\n  * This component injects elements to `<head>` of your page.\n  * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n  */\nfunction Head(_ref) {\n  var children = _ref.children;\n  var ampState = (0, _react.useContext)(_ampContext.AmpStateContext);\n  var headManager = (0, _react.useContext)(_headManagerContext.HeadManagerContext);\n  return /*#__PURE__*/_react[\"default\"].createElement(_sideEffect[\"default\"], {\n    reduceComponentsToState: reduceComponents,\n    headManager: headManager,\n    inAmpMode: (0, _amp.isInAmpMode)(ampState)\n  }, children);\n} // TODO: Remove in the next major release\n_c = Head;\nHead.rewind = function () {};\nvar _default = Head;\nexports[\"default\"] = _default;\nvar _c;\n$RefreshReg$(_c, \"Head\");","map":{"version":3,"sources":["../../../next-server/lib/head.tsx"],"names":["defaultHead","inAmpMode","head","push","onlyReactElement","list","child","type","React","Fragment","concat","Children","toArray","props","children","reduce","fragmentList","fragmentChild","METATYPES","unique","keys","Set","tags","metaTypes","metaCategories","h","isUnique","key","indexOf","slice","has","add","i","len","length","metatype","hasOwnProperty","category","categories","reduceComponents","headElements","headElement","headElementChildren","reverse","filter","map","c","process","env","__NEXT_OPTIMIZE_FONTS","some","url","startsWith","newProps","undefined","cloneElement","Head","ampState","AmpStateContext","headManager","HeadManagerContext","rewind"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport Effect from './side-effect'\nimport { AmpStateContext } from './amp-context'\nimport { HeadManagerContext } from './head-manager-context'\nimport { isInAmpMode } from './amp'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" />]\n  if (!inAmpMode) {\n    head.push(<meta name=\"viewport\" content=\"width=device-width\" />)\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactChild\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      React.Children.toArray(child.props.children).reduce(\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactChild\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let isUnique = true\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        isUnique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if (categories.has(category)) {\n              isUnique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return isUnique\n  }\n}\n\n/**\n *\n * @param headElements List of multiple <Head> instances\n */\nfunction reduceComponents(\n  headElements: Array<React.ReactElement<any>>,\n  props: WithInAmpMode\n) {\n  return headElements\n    .reduce(\n      (list: React.ReactChild[], headElement: React.ReactElement<any>) => {\n        const headElementChildren = React.Children.toArray(\n          headElement.props.children\n        )\n        return list.concat(headElementChildren)\n      },\n      []\n    )\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(props.inAmpMode))\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      if (process.env.__NEXT_OPTIMIZE_FONTS && !props.inAmpMode) {\n        if (\n          c.type === 'link' &&\n          c.props['href'] &&\n          // TODO(prateekbh@): Replace this with const from `constants` when the tree shaking works.\n          ['https://fonts.googleapis.com/css'].some((url) =>\n            c.props['href'].startsWith(url)\n          )\n        ) {\n          const newProps = { ...(c.props || {}) }\n          newProps['data-href'] = newProps['href']\n          newProps['href'] = undefined\n          return React.cloneElement(c, newProps)\n        }\n      }\n      return React.cloneElement(c, { key })\n    })\n}\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  const ampState = useContext(AmpStateContext)\n  const headManager = useContext(HeadManagerContext)\n  return (\n    <Effect\n      reduceComponentsToState={reduceComponents}\n      headManager={headManager}\n      inAmpMode={isInAmpMode(ampState)}\n    >\n      {children}\n    </Effect>\n  )\n}\n\n// TODO: Remove in the next major release\nHead.rewind = () => {}\n\nexport default Head\n"]},"metadata":{},"sourceType":"script"}