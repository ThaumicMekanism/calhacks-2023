{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nexports.__esModule = true;\nexports[\"default\"] = initHeadManager;\nvar _react = require(\"react\");\nvar DOMAttributeNames = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv'\n};\nfunction reactElementToDOM(_ref) {\n  var type = _ref.type,\n    props = _ref.props;\n  var el = document.createElement(type);\n  for (var p in props) {\n    if (!props.hasOwnProperty(p)) continue;\n    if (p === 'children' || p === 'dangerouslySetInnerHTML') continue; // we don't render undefined props to the DOM\n    if (props[p] === undefined) continue;\n    var attr = DOMAttributeNames[p] || p.toLowerCase();\n    el.setAttribute(attr, props[p]);\n  }\n  var children = props.children,\n    dangerouslySetInnerHTML = props.dangerouslySetInnerHTML;\n  if (dangerouslySetInnerHTML) {\n    el.innerHTML = dangerouslySetInnerHTML.__html || '';\n  } else if (children) {\n    el.textContent = typeof children === 'string' ? children : Array.isArray(children) ? children.join('') : '';\n  }\n  return el;\n}\nfunction updateElements(elements, components, removeOldTags) {\n  var headEl = document.getElementsByTagName('head')[0];\n  var oldTags = new Set(elements);\n  components.forEach(function (tag) {\n    if (tag.type === 'title') {\n      var title = '';\n      if (tag) {\n        var children = tag.props.children;\n        title = typeof children === 'string' ? children : Array.isArray(children) ? children.join('') : '';\n      }\n      if (title !== document.title) document.title = title;\n      return;\n    }\n    var newTag = reactElementToDOM(tag);\n    var elementIter = elements.values();\n    while (true) {\n      // Note: We don't use for-of here to avoid needing to polyfill it.\n      var _elementIter$next = elementIter.next(),\n        done = _elementIter$next.done,\n        value = _elementIter$next.value;\n      if (value == null ? void 0 : value.isEqualNode(newTag)) {\n        oldTags[\"delete\"](value);\n        return;\n      }\n      if (done) {\n        break;\n      }\n    }\n    elements.add(newTag);\n    headEl.appendChild(newTag);\n  });\n  oldTags.forEach(function (oldTag) {\n    if (removeOldTags) {\n      oldTag.parentNode.removeChild(oldTag);\n    }\n    elements[\"delete\"](oldTag);\n  });\n}\nfunction initHeadManager(initialHeadEntries) {\n  var headEl = document.getElementsByTagName('head')[0];\n  var elements = new Set(headEl.children);\n  updateElements(elements, initialHeadEntries.map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n      type = _ref3[0],\n      props = _ref3[1];\n    return /*#__PURE__*/(0, _react.createElement)(type, props);\n  }), false);\n  var updatePromise = null;\n  return {\n    mountedInstances: new Set(),\n    updateHead: function updateHead(head) {\n      var promise = updatePromise = Promise.resolve().then(function () {\n        if (promise !== updatePromise) return;\n        updatePromise = null;\n        updateElements(elements, head, true);\n      });\n    }\n  };\n}","map":{"version":3,"sources":["../../client/head-manager.ts"],"names":["DOMAttributeNames","acceptCharset","className","htmlFor","httpEquiv","reactElementToDOM","type","props","el","document","createElement","p","hasOwnProperty","undefined","attr","toLowerCase","setAttribute","children","dangerouslySetInnerHTML","innerHTML","__html","textContent","Array","isArray","join","updateElements","elements","components","removeOldTags","headEl","getElementsByTagName","oldTags","Set","forEach","tag","title","newTag","elementIter","values","done","value","next","isEqualNode","add","appendChild","oldTag","parentNode","removeChild","initHeadManager","initialHeadEntries","map","updatePromise","mountedInstances","updateHead","head","promise","Promise","resolve","then"],"mappings":"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","sourcesContent":["import { createElement } from 'react'\nimport { HeadEntry } from '../next-server/lib/utils'\n\nconst DOMAttributeNames: Record<string, string> = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv',\n}\n\nfunction reactElementToDOM({ type, props }: JSX.Element): HTMLElement {\n  const el = document.createElement(type)\n  for (const p in props) {\n    if (!props.hasOwnProperty(p)) continue\n    if (p === 'children' || p === 'dangerouslySetInnerHTML') continue\n\n    // we don't render undefined props to the DOM\n    if (props[p] === undefined) continue\n\n    const attr = DOMAttributeNames[p] || p.toLowerCase()\n    el.setAttribute(attr, props[p])\n  }\n\n  const { children, dangerouslySetInnerHTML } = props\n  if (dangerouslySetInnerHTML) {\n    el.innerHTML = dangerouslySetInnerHTML.__html || ''\n  } else if (children) {\n    el.textContent =\n      typeof children === 'string'\n        ? children\n        : Array.isArray(children)\n        ? children.join('')\n        : ''\n  }\n  return el\n}\n\nfunction updateElements(\n  elements: Set<Element>,\n  components: JSX.Element[],\n  removeOldTags: boolean\n) {\n  const headEl = document.getElementsByTagName('head')[0]\n  const oldTags = new Set(elements)\n\n  components.forEach((tag) => {\n    if (tag.type === 'title') {\n      let title = ''\n      if (tag) {\n        const { children } = tag.props\n        title =\n          typeof children === 'string'\n            ? children\n            : Array.isArray(children)\n            ? children.join('')\n            : ''\n      }\n      if (title !== document.title) document.title = title\n      return\n    }\n\n    const newTag = reactElementToDOM(tag)\n    const elementIter = elements.values()\n\n    while (true) {\n      // Note: We don't use for-of here to avoid needing to polyfill it.\n      const { done, value } = elementIter.next()\n      if (value?.isEqualNode(newTag)) {\n        oldTags.delete(value)\n        return\n      }\n\n      if (done) {\n        break\n      }\n    }\n\n    elements.add(newTag)\n    headEl.appendChild(newTag)\n  })\n\n  oldTags.forEach((oldTag) => {\n    if (removeOldTags) {\n      oldTag.parentNode!.removeChild(oldTag)\n    }\n    elements.delete(oldTag)\n  })\n}\n\nexport default function initHeadManager(initialHeadEntries: HeadEntry[]) {\n  const headEl = document.getElementsByTagName('head')[0]\n  const elements = new Set<Element>(headEl.children)\n\n  updateElements(\n    elements,\n    initialHeadEntries.map(([type, props]) => createElement(type, props)),\n    false\n  )\n\n  let updatePromise: Promise<void> | null = null\n\n  return {\n    mountedInstances: new Set(),\n    updateHead: (head: JSX.Element[]) => {\n      const promise = (updatePromise = Promise.resolve().then(() => {\n        if (promise !== updatePromise) return\n\n        updatePromise = null\n        updateElements(elements, head, true)\n      }))\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"script"}