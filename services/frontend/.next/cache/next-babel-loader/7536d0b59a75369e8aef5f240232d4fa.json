{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports[\"default\"] = exports.looseToArray = void 0;\nvar _mitt = _interopRequireDefault(require(\"../next-server/lib/mitt\"));\nvar _router = require(\"../next-server/lib/router/router\");\nvar _getAssetPathFromRoute = _interopRequireDefault(require(\"../next-server/lib/router/utils/get-asset-path-from-route\"));\nvar _isDynamic = require(\"../next-server/lib/router/utils/is-dynamic\");\nvar _parseRelativeUrl = require(\"../next-server/lib/router/utils/parse-relative-url\");\nvar looseToArray = function looseToArray(input) {\n  return [].slice.call(input);\n};\nexports.looseToArray = looseToArray;\nfunction getInitialStylesheets() {\n  return looseToArray(document.styleSheets).filter(function (el) {\n    return el.ownerNode && el.ownerNode.tagName === 'LINK' && el.ownerNode.hasAttribute('data-n-p');\n  }).map(function (sheet) {\n    return {\n      href: sheet.ownerNode.getAttribute('href'),\n      text: looseToArray(sheet.cssRules).map(function (r) {\n        return r.cssText;\n      }).join('')\n    };\n  });\n}\nfunction hasRel(rel, link) {\n  try {\n    link = document.createElement('link');\n    return link.relList.supports(rel);\n  } catch (_unused) {}\n}\nfunction pageLoadError(route) {\n  return (0, _router.markLoadingError)(new Error(\"Error loading \".concat(route)));\n}\nvar relPrefetch = hasRel('preload') && !hasRel('prefetch') ?\n// https://caniuse.com/#feat=link-rel-preload\n// macOS and iOS (Safari does not support prefetch)\n'preload' :\n// https://caniuse.com/#feat=link-rel-prefetch\n// IE 11, Edge 12+, nearly all evergreen\n'prefetch';\nvar relPreload = hasRel('preload') ? 'preload' : relPrefetch;\nvar relPreloadStyle = 'fetch';\nvar hasNoModule = ('noModule' in document.createElement('script'));\nfunction normalizeRoute(route) {\n  if (route[0] !== '/') {\n    throw new Error(\"Route name should start with a \\\"/\\\", got \\\"\".concat(route, \"\\\"\"));\n  }\n  if (route === '/') return route;\n  return route.replace(/\\/$/, '');\n}\nfunction appendLink(href, rel, as, link) {\n  return new Promise(function (res, rej) {\n    link = document.createElement('link'); // The order of property assignment here is intentional:\n    if (as) link.as = as;\n    link.rel = rel;\n    link.crossOrigin = process.env.__NEXT_CROSS_ORIGIN;\n    link.onload = res;\n    link.onerror = rej; // `href` should always be last:\n    link.href = href;\n    document.head.appendChild(link);\n  });\n}\nfunction loadScript(url) {\n  return new Promise(function (res, rej) {\n    var script = document.createElement('script');\n    if (process.env.__NEXT_MODERN_BUILD && hasNoModule) {\n      script.type = 'module';\n    }\n    script.crossOrigin = process.env.__NEXT_CROSS_ORIGIN;\n    script.src = url;\n    script.onload = res;\n    script.onerror = function () {\n      return rej(pageLoadError(url));\n    };\n    document.body.appendChild(script);\n  });\n}\nvar PageLoader = /*#__PURE__*/function () {\n  function PageLoader(buildId, assetPrefix, initialPage) {\n    _classCallCheck(this, PageLoader);\n    this.initialPage = void 0;\n    this.buildId = void 0;\n    this.assetPrefix = void 0;\n    this.pageCache = void 0;\n    this.pageRegisterEvents = void 0;\n    this.loadingRoutes = void 0;\n    this.promisedBuildManifest = void 0;\n    this.promisedSsgManifest = void 0;\n    this.promisedDevPagesManifest = void 0;\n    this.initialPage = initialPage;\n    this.buildId = buildId;\n    this.assetPrefix = assetPrefix;\n    this.pageCache = {};\n    this.pageRegisterEvents = (0, _mitt[\"default\"])();\n    this.loadingRoutes = {\n      // By default these 2 pages are being loaded in the initial html\n      '/_app': true\n    }; // TODO: get rid of this limitation for rendering the error page\n    if (initialPage !== '/_error') {\n      this.loadingRoutes[initialPage] = true;\n    }\n    this.promisedBuildManifest = new Promise(function (resolve) {\n      if (window.__BUILD_MANIFEST) {\n        resolve(window.__BUILD_MANIFEST);\n      } else {\n        ;\n        window.__BUILD_MANIFEST_CB = function () {\n          resolve(window.__BUILD_MANIFEST);\n        };\n      }\n    }); /** @type {Promise<Set<string>>} */\n    this.promisedSsgManifest = new Promise(function (resolve) {\n      if (window.__SSG_MANIFEST) {\n        resolve(window.__SSG_MANIFEST);\n      } else {\n        ;\n        window.__SSG_MANIFEST_CB = function () {\n          resolve(window.__SSG_MANIFEST);\n        };\n      }\n    });\n  }\n  _createClass(PageLoader, [{\n    key: \"getPageList\",\n    value: function getPageList() {\n      if (false) {\n        return this.promisedBuildManifest.then(function (buildManifest) {\n          return buildManifest.sortedPages;\n        });\n      } else {\n        if (window.__DEV_PAGES_MANIFEST) {\n          return window.__DEV_PAGES_MANIFEST.pages;\n        } else {\n          if (!this.promisedDevPagesManifest) {\n            this.promisedDevPagesManifest = fetch(\"\".concat(this.assetPrefix, \"/_next/static/development/_devPagesManifest.json\")).then(function (res) {\n              return res.json();\n            }).then(function (manifest) {\n              ;\n              window.__DEV_PAGES_MANIFEST = manifest;\n              return manifest.pages;\n            })[\"catch\"](function (err) {\n              console.log(\"Failed to fetch devPagesManifest\", err);\n            });\n          }\n          return this.promisedDevPagesManifest;\n        }\n      }\n    } // Returns a promise for the dependencies for a particular route\n  }, {\n    key: \"getDependencies\",\n    value: function getDependencies(route) {\n      var _this = this;\n      return this.promisedBuildManifest.then(function (m) {\n        return m[route] ? m[route].map(function (url) {\n          return \"\".concat(_this.assetPrefix, \"/_next/\").concat(encodeURI(url));\n        }) : Promise.reject(pageLoadError(route));\n      });\n    } /**\n      * @param {string} href the route href (file-system path)\n      * @param {string} asPath the URL as shown in browser (virtual path); used for dynamic routes\n      */\n  }, {\n    key: \"getDataHref\",\n    value: function getDataHref(href, asPath, ssg, locale, defaultLocale) {\n      var _this2 = this;\n      var _ref = (0, _parseRelativeUrl.parseRelativeUrl)(href),\n        hrefPathname = _ref.pathname,\n        query = _ref.query,\n        search = _ref.search;\n      var _ref2 = (0, _parseRelativeUrl.parseRelativeUrl)(asPath),\n        asPathname = _ref2.pathname;\n      var route = normalizeRoute(hrefPathname);\n      var getHrefForSlug = function getHrefForSlug(path) {\n        var dataRoute = (0, _router.addLocale)((0, _getAssetPathFromRoute[\"default\"])(path, '.json'), locale, defaultLocale);\n        return (0, _router.addBasePath)(\"/_next/data/\".concat(_this2.buildId).concat(dataRoute).concat(ssg ? '' : search));\n      };\n      var isDynamic = (0, _isDynamic.isDynamicRoute)(route);\n      var interpolatedRoute = isDynamic ? (0, _router.interpolateAs)(hrefPathname, asPathname, query).result : '';\n      return isDynamic ? interpolatedRoute && getHrefForSlug(interpolatedRoute) : getHrefForSlug(route);\n    } /**\n      * @param {string} href the route href (file-system path)\n      * @param {string} asPath the URL as shown in browser (virtual path); used for dynamic routes\n      */\n  }, {\n    key: \"prefetchData\",\n    value: function prefetchData(href, asPath, locale, defaultLocale) {\n      var _this3 = this;\n      var _ref3 = (0, _parseRelativeUrl.parseRelativeUrl)(href),\n        hrefPathname = _ref3.pathname;\n      var route = normalizeRoute(hrefPathname);\n      return this.promisedSsgManifest.then(function (s, _dataHref) {\n        return (\n          // Check if the route requires a data file\n          s.has(route) && (\n          // Try to generate data href, noop when falsy\n          _dataHref = _this3.getDataHref(href, asPath, true, locale, defaultLocale)) &&\n          // noop when data has already been prefetched (dedupe)\n          !document.querySelector(\"link[rel=\\\"\".concat(relPrefetch, \"\\\"][href^=\\\"\").concat(_dataHref, \"\\\"]\")) &&\n          // Inject the `<link rel=prefetch>` tag for above computed `href`.\n          appendLink(_dataHref, relPrefetch, 'fetch')[\"catch\"](function () {/* ignore prefetch error */})\n        );\n      });\n    }\n  }, {\n    key: \"loadPage\",\n    value: function loadPage(route) {\n      var _this4 = this;\n      route = normalizeRoute(route);\n      return new Promise(function (resolve, reject) {\n        // If there's a cached version of the page, let's use it.\n        var cachedPage = _this4.pageCache[route];\n        if (cachedPage) {\n          if ('error' in cachedPage) {\n            reject(cachedPage.error);\n          } else {\n            resolve(cachedPage);\n          }\n          return;\n        }\n        var fire = function fire(pageToCache) {\n          _this4.pageRegisterEvents.off(route, fire);\n          delete _this4.loadingRoutes[route];\n          if ('error' in pageToCache) {\n            reject(pageToCache.error);\n          } else {\n            resolve(pageToCache);\n          }\n        }; // Register a listener to get the page\n        _this4.pageRegisterEvents.on(route, fire);\n        if (!_this4.loadingRoutes[route]) {\n          _this4.loadingRoutes[route] = true;\n          if (false) {\n            _this4.getDependencies(route).then(function (deps) {\n              var pending = [];\n              deps.forEach(function (d) {\n                if (d.endsWith('.js') && !document.querySelector(\"script[src^=\\\"\".concat(d, \"\\\"]\"))) {\n                  pending.push(loadScript(d));\n                } // Prefetch CSS as it'll be needed when the page JavaScript\n                // evaluates. This will only trigger if explicit prefetching is\n                // disabled for a <Link>... prefetching in this case is desirable\n                // because we *know* it's going to be used very soon (page was\n                // loaded).\n                if (d.endsWith('.css') && !document.querySelector(\"link[rel=\\\"\".concat(relPreload, \"\\\"][href^=\\\"\").concat(d, \"\\\"]\"))) {\n                  // This is not pushed into `pending` because we don't need to\n                  // wait for these to resolve. To prevent an unhandled\n                  // rejection, we swallow the error which is handled later in\n                  // the rendering cycle (this is just a preload optimization).\n                  appendLink(d, relPreload, relPreloadStyle)[\"catch\"](function () {/* ignore preload error */});\n                }\n              });\n              return Promise.all(pending);\n            })[\"catch\"](function (err) {\n              // Mark the page as failed to load if any of its required scripts\n              // fail to load:\n              _this4.pageCache[route] = {\n                error: err\n              };\n              fire({\n                error: err\n              });\n            });\n          } else {\n            // Development only. In production the page file is part of the build manifest\n            route = normalizeRoute(route);\n            var scriptRoute = (0, _getAssetPathFromRoute[\"default\"])(route, '.js');\n            var url = \"\".concat(_this4.assetPrefix, \"/_next/static/chunks/pages\").concat(encodeURI(scriptRoute));\n            loadScript(url)[\"catch\"](function (err) {\n              // Mark the page as failed to load if its script fails to load:\n              _this4.pageCache[route] = {\n                error: err\n              };\n              fire({\n                error: err\n              });\n            });\n          }\n        }\n      });\n    } // This method if called by the route code.\n  }, {\n    key: \"registerPage\",\n    value: function registerPage(route, regFn) {\n      var _this5 = this;\n      var register = function register(styleSheets) {\n        try {\n          var mod = regFn();\n          var pageData = {\n            page: mod[\"default\"] || mod,\n            mod: mod,\n            styleSheets: styleSheets\n          };\n          _this5.pageCache[route] = pageData;\n          _this5.pageRegisterEvents.emit(route, pageData);\n        } catch (error) {\n          _this5.pageCache[route] = {\n            error: error\n          };\n          _this5.pageRegisterEvents.emit(route, {\n            error: error\n          });\n        }\n      };\n      if (true) {\n        // Wait for webpack to become idle if it's not.\n        // More info: https://github.com/vercel/next.js/pull/1511\n        if (module.hot && module.hot.status() !== 'idle') {\n          console.log(\"Waiting for webpack to become \\\"idle\\\" to initialize the page: \\\"\".concat(route, \"\\\"\"));\n          var check = function check(status) {\n            if (status === 'idle') {\n              ;\n              module.hot.removeStatusHandler(check);\n              register( /* css is handled via style-loader in development */[]);\n            }\n          };\n          module.hot.status(check);\n          return;\n        }\n      }\n      function fetchStyleSheet(href) {\n        return fetch(href).then(function (res) {\n          if (!res.ok) throw pageLoadError(href);\n          return res.text().then(function (text) {\n            return {\n              href: href,\n              text: text\n            };\n          });\n        });\n      }\n      var isInitialLoad = route === this.initialPage;\n      var promisedDeps =\n      // Shared styles will already be on the page:\n      route === '/_app' || // We use `style-loader` in development:\n      true ? Promise.resolve([]) :\n      // Tests that this does not block hydration:\n      // test/integration/css-fixtures/hydrate-without-deps/\n      (isInitialLoad ? Promise.resolve(looseToArray(document.querySelectorAll('link[data-n-p]')).map(function (e) {\n        return e.getAttribute('href');\n      })) : this.getDependencies(route).then(function (deps) {\n        return deps.filter(function (d) {\n          return d.endsWith('.css');\n        });\n      })).then(function (cssFiles) {\n        return (\n          // These files should've already been fetched by now, so this\n          // should resolve instantly.\n          Promise.all(cssFiles.map(function (d) {\n            return fetchStyleSheet(d);\n          }))[\"catch\"](function (err) {\n            if (isInitialLoad) return getInitialStylesheets();\n            throw err;\n          })\n        );\n      });\n      promisedDeps.then(function (deps) {\n        return register(deps);\n      }, function (error) {\n        _this5.pageCache[route] = {\n          error: error\n        };\n        _this5.pageRegisterEvents.emit(route, {\n          error: error\n        });\n      });\n    } /**\n      * @param {string} route\n      * @param {boolean} [isDependency]\n      */\n  }, {\n    key: \"prefetch\",\n    value: function prefetch(route, isDependency) {\n      var _this6 = this;\n      // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n      // License: Apache 2.0\n      var cn;\n      if (cn = navigator.connection) {\n        // Don't prefetch if using 2G or if Save-Data is enabled.\n        if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();\n      } /** @type {string} */\n      var url;\n      if (isDependency) {\n        url = route;\n      } else {\n        if (true) {\n          route = normalizeRoute(route);\n          var ext = process.env.__NEXT_MODERN_BUILD && hasNoModule ? '.module.js' : '.js';\n          var scriptRoute = (0, _getAssetPathFromRoute[\"default\"])(route, ext);\n          url = \"\".concat(this.assetPrefix, \"/_next/static/\").concat(encodeURIComponent(this.buildId), \"/pages\").concat(encodeURI(scriptRoute));\n        }\n      }\n      return Promise.all(document.querySelector(\"link[rel=\\\"\".concat(relPrefetch, \"\\\"][href^=\\\"\").concat(url, \"\\\"]\")) ? [] : [url && appendLink(url, relPrefetch, url.endsWith('.css') ? relPreloadStyle : 'script'), false && !isDependency && this.getDependencies(route).then(function (urls) {\n        return Promise.all(urls.map(function (dependencyUrl) {\n          return _this6.prefetch(dependencyUrl, true);\n        }));\n      })]).then(\n      // do not return any data\n      function () {},\n      // swallow prefetch errors\n      function () {});\n    }\n  }]);\n  return PageLoader;\n}();\nexports[\"default\"] = PageLoader;","map":{"version":3,"sources":["../../client/page-loader.ts"],"names":["looseToArray","input","slice","call","getInitialStylesheets","document","styleSheets","filter","el","ownerNode","tagName","hasAttribute","map","sheet","href","getAttribute","text","cssRules","r","cssText","join","hasRel","rel","link","createElement","relList","supports","pageLoadError","route","Error","relPrefetch","relPreload","relPreloadStyle","hasNoModule","normalizeRoute","replace","appendLink","as","Promise","res","rej","crossOrigin","process","env","__NEXT_CROSS_ORIGIN","onload","onerror","head","appendChild","loadScript","url","script","__NEXT_MODERN_BUILD","type","src","body","PageLoader","initialPage","buildId","assetPrefix","pageCache","pageRegisterEvents","loadingRoutes","promisedBuildManifest","promisedSsgManifest","promisedDevPagesManifest","constructor","resolve","window","__BUILD_MANIFEST","__BUILD_MANIFEST_CB","__SSG_MANIFEST","__SSG_MANIFEST_CB","getPageList","then","buildManifest","sortedPages","__DEV_PAGES_MANIFEST","pages","fetch","json","manifest","err","console","log","m","encodeURI","reject","getDataHref","asPath","ssg","locale","defaultLocale","pathname","hrefPathname","query","search","asPathname","getHrefForSlug","path","dataRoute","isDynamic","interpolatedRoute","result","prefetchData","s","_dataHref","has","querySelector","loadPage","cachedPage","error","fire","pageToCache","off","on","getDependencies","deps","pending","forEach","d","endsWith","push","all","scriptRoute","registerPage","regFn","register","mod","pageData","page","emit","module","hot","status","check","removeStatusHandler","fetchStyleSheet","ok","isInitialLoad","promisedDeps","querySelectorAll","e","cssFiles","prefetch","isDependency","cn","navigator","connection","saveData","test","effectiveType","ext","encodeURIComponent","urls","dependencyUrl"],"mappings":"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","sourcesContent":["import { ComponentType } from 'react'\nimport type { ClientSsgManifest } from '../build'\nimport type { ClientBuildManifest } from '../build/webpack/plugins/build-manifest-plugin'\nimport mitt from '../next-server/lib/mitt'\nimport type { MittEmitter } from '../next-server/lib/mitt'\nimport {\n  addBasePath,\n  markLoadingError,\n  interpolateAs,\n  addLocale,\n} from '../next-server/lib/router/router'\n\nimport getAssetPathFromRoute from '../next-server/lib/router/utils/get-asset-path-from-route'\nimport { isDynamicRoute } from '../next-server/lib/router/utils/is-dynamic'\nimport { parseRelativeUrl } from '../next-server/lib/router/utils/parse-relative-url'\n\nexport const looseToArray = <T extends {}>(input: any): T[] =>\n  [].slice.call(input)\n\nfunction getInitialStylesheets(): StyleSheetTuple[] {\n  return looseToArray<CSSStyleSheet>(document.styleSheets)\n    .filter(\n      (el: CSSStyleSheet) =>\n        el.ownerNode &&\n        (el.ownerNode as Element).tagName === 'LINK' &&\n        (el.ownerNode as Element).hasAttribute('data-n-p')\n    )\n    .map((sheet) => ({\n      href: (sheet.ownerNode as Element).getAttribute('href')!,\n      text: looseToArray<CSSRule>(sheet.cssRules)\n        .map((r) => r.cssText)\n        .join(''),\n    }))\n}\n\nfunction hasRel(rel: string, link?: HTMLLinkElement) {\n  try {\n    link = document.createElement('link')\n    return link.relList.supports(rel)\n  } catch {}\n}\n\nfunction pageLoadError(route: string) {\n  return markLoadingError(new Error(`Error loading ${route}`))\n}\n\nconst relPrefetch =\n  hasRel('preload') && !hasRel('prefetch')\n    ? // https://caniuse.com/#feat=link-rel-preload\n      // macOS and iOS (Safari does not support prefetch)\n      'preload'\n    : // https://caniuse.com/#feat=link-rel-prefetch\n      // IE 11, Edge 12+, nearly all evergreen\n      'prefetch'\n\nconst relPreload = hasRel('preload') ? 'preload' : relPrefetch\nconst relPreloadStyle = 'fetch'\n\nconst hasNoModule = 'noModule' in document.createElement('script')\n\nfunction normalizeRoute(route: string) {\n  if (route[0] !== '/') {\n    throw new Error(`Route name should start with a \"/\", got \"${route}\"`)\n  }\n\n  if (route === '/') return route\n  return route.replace(/\\/$/, '')\n}\n\nfunction appendLink(\n  href: string,\n  rel: string,\n  as?: string,\n  link?: HTMLLinkElement\n): Promise<any> {\n  return new Promise((res, rej) => {\n    link = document.createElement('link')\n\n    // The order of property assignment here is intentional:\n    if (as) link!.as = as\n    link!.rel = rel\n    link!.crossOrigin = process.env.__NEXT_CROSS_ORIGIN!\n    link!.onload = res\n    link!.onerror = rej\n\n    // `href` should always be last:\n    link!.href = href\n\n    document.head.appendChild(link)\n  })\n}\n\nfunction loadScript(url: string): Promise<any> {\n  return new Promise((res, rej) => {\n    const script = document.createElement('script')\n    if (process.env.__NEXT_MODERN_BUILD && hasNoModule) {\n      script.type = 'module'\n    }\n    script.crossOrigin = process.env.__NEXT_CROSS_ORIGIN!\n    script.src = url\n    script.onload = res\n    script.onerror = () => rej(pageLoadError(url))\n    document.body.appendChild(script)\n  })\n}\n\nexport type StyleSheetTuple = { href: string; text: string }\nexport type GoodPageCache = {\n  page: ComponentType\n  mod: any\n  styleSheets: StyleSheetTuple[]\n}\nexport type PageCacheEntry = { error: any } | GoodPageCache\n\nexport default class PageLoader {\n  private initialPage: string\n  private buildId: string\n  private assetPrefix: string\n  private pageCache: Record<string, PageCacheEntry>\n  private pageRegisterEvents: MittEmitter\n  private loadingRoutes: Record<string, boolean>\n  private promisedBuildManifest?: Promise<ClientBuildManifest>\n  private promisedSsgManifest?: Promise<ClientSsgManifest>\n  private promisedDevPagesManifest?: Promise<any>\n\n  constructor(buildId: string, assetPrefix: string, initialPage: string) {\n    this.initialPage = initialPage\n\n    this.buildId = buildId\n    this.assetPrefix = assetPrefix\n\n    this.pageCache = {}\n    this.pageRegisterEvents = mitt()\n    this.loadingRoutes = {\n      // By default these 2 pages are being loaded in the initial html\n      '/_app': true,\n    }\n\n    // TODO: get rid of this limitation for rendering the error page\n    if (initialPage !== '/_error') {\n      this.loadingRoutes[initialPage] = true\n    }\n\n    this.promisedBuildManifest = new Promise((resolve) => {\n      if ((window as any).__BUILD_MANIFEST) {\n        resolve((window as any).__BUILD_MANIFEST)\n      } else {\n        ;(window as any).__BUILD_MANIFEST_CB = () => {\n          resolve((window as any).__BUILD_MANIFEST)\n        }\n      }\n    })\n\n    /** @type {Promise<Set<string>>} */\n    this.promisedSsgManifest = new Promise((resolve) => {\n      if ((window as any).__SSG_MANIFEST) {\n        resolve((window as any).__SSG_MANIFEST)\n      } else {\n        ;(window as any).__SSG_MANIFEST_CB = () => {\n          resolve((window as any).__SSG_MANIFEST)\n        }\n      }\n    })\n  }\n\n  getPageList() {\n    if (process.env.NODE_ENV === 'production') {\n      return this.promisedBuildManifest!.then(\n        (buildManifest) => buildManifest.sortedPages\n      )\n    } else {\n      if ((window as any).__DEV_PAGES_MANIFEST) {\n        return (window as any).__DEV_PAGES_MANIFEST.pages\n      } else {\n        if (!this.promisedDevPagesManifest) {\n          this.promisedDevPagesManifest = fetch(\n            `${this.assetPrefix}/_next/static/development/_devPagesManifest.json`\n          )\n            .then((res) => res.json())\n            .then((manifest) => {\n              ;(window as any).__DEV_PAGES_MANIFEST = manifest\n              return manifest.pages\n            })\n            .catch((err) => {\n              console.log(`Failed to fetch devPagesManifest`, err)\n            })\n        }\n        return this.promisedDevPagesManifest\n      }\n    }\n  }\n\n  // Returns a promise for the dependencies for a particular route\n  private getDependencies(route: string): Promise<string[]> {\n    return this.promisedBuildManifest!.then((m) => {\n      return m[route]\n        ? m[route].map((url) => `${this.assetPrefix}/_next/${encodeURI(url)}`)\n        : Promise.reject(pageLoadError(route))\n    })\n  }\n\n  /**\n   * @param {string} href the route href (file-system path)\n   * @param {string} asPath the URL as shown in browser (virtual path); used for dynamic routes\n   */\n  getDataHref(\n    href: string,\n    asPath: string,\n    ssg: boolean,\n    locale?: string,\n    defaultLocale?: string\n  ) {\n    const { pathname: hrefPathname, query, search } = parseRelativeUrl(href)\n    const { pathname: asPathname } = parseRelativeUrl(asPath)\n    const route = normalizeRoute(hrefPathname)\n\n    const getHrefForSlug = (path: string) => {\n      const dataRoute = addLocale(\n        getAssetPathFromRoute(path, '.json'),\n        locale,\n        defaultLocale\n      )\n      return addBasePath(\n        `/_next/data/${this.buildId}${dataRoute}${ssg ? '' : search}`\n      )\n    }\n\n    const isDynamic: boolean = isDynamicRoute(route)\n    const interpolatedRoute = isDynamic\n      ? interpolateAs(hrefPathname, asPathname, query).result\n      : ''\n\n    return isDynamic\n      ? interpolatedRoute && getHrefForSlug(interpolatedRoute)\n      : getHrefForSlug(route)\n  }\n\n  /**\n   * @param {string} href the route href (file-system path)\n   * @param {string} asPath the URL as shown in browser (virtual path); used for dynamic routes\n   */\n  prefetchData(\n    href: string,\n    asPath: string,\n    locale?: string,\n    defaultLocale?: string\n  ) {\n    const { pathname: hrefPathname } = parseRelativeUrl(href)\n    const route = normalizeRoute(hrefPathname)\n    return this.promisedSsgManifest!.then(\n      (s: ClientSsgManifest, _dataHref?: string) =>\n        // Check if the route requires a data file\n        s.has(route) &&\n        // Try to generate data href, noop when falsy\n        (_dataHref = this.getDataHref(\n          href,\n          asPath,\n          true,\n          locale,\n          defaultLocale\n        )) &&\n        // noop when data has already been prefetched (dedupe)\n        !document.querySelector(\n          `link[rel=\"${relPrefetch}\"][href^=\"${_dataHref}\"]`\n        ) &&\n        // Inject the `<link rel=prefetch>` tag for above computed `href`.\n        appendLink(_dataHref, relPrefetch, 'fetch').catch(() => {\n          /* ignore prefetch error */\n        })\n    )\n  }\n\n  loadPage(route: string): Promise<GoodPageCache> {\n    route = normalizeRoute(route)\n\n    return new Promise<GoodPageCache>((resolve, reject) => {\n      // If there's a cached version of the page, let's use it.\n      const cachedPage = this.pageCache[route]\n      if (cachedPage) {\n        if ('error' in cachedPage) {\n          reject(cachedPage.error)\n        } else {\n          resolve(cachedPage)\n        }\n        return\n      }\n\n      const fire = (pageToCache: PageCacheEntry) => {\n        this.pageRegisterEvents.off(route, fire)\n        delete this.loadingRoutes[route]\n\n        if ('error' in pageToCache) {\n          reject(pageToCache.error)\n        } else {\n          resolve(pageToCache)\n        }\n      }\n\n      // Register a listener to get the page\n      this.pageRegisterEvents.on(route, fire)\n\n      if (!this.loadingRoutes[route]) {\n        this.loadingRoutes[route] = true\n        if (process.env.NODE_ENV === 'production') {\n          this.getDependencies(route)\n            .then((deps) => {\n              const pending: Promise<any>[] = []\n              deps.forEach((d) => {\n                if (\n                  d.endsWith('.js') &&\n                  !document.querySelector(`script[src^=\"${d}\"]`)\n                ) {\n                  pending.push(loadScript(d))\n                }\n\n                // Prefetch CSS as it'll be needed when the page JavaScript\n                // evaluates. This will only trigger if explicit prefetching is\n                // disabled for a <Link>... prefetching in this case is desirable\n                // because we *know* it's going to be used very soon (page was\n                // loaded).\n                if (\n                  d.endsWith('.css') &&\n                  !document.querySelector(\n                    `link[rel=\"${relPreload}\"][href^=\"${d}\"]`\n                  )\n                ) {\n                  // This is not pushed into `pending` because we don't need to\n                  // wait for these to resolve. To prevent an unhandled\n                  // rejection, we swallow the error which is handled later in\n                  // the rendering cycle (this is just a preload optimization).\n                  appendLink(d, relPreload, relPreloadStyle).catch(() => {\n                    /* ignore preload error */\n                  })\n                }\n              })\n              return Promise.all(pending)\n            })\n            .catch((err) => {\n              // Mark the page as failed to load if any of its required scripts\n              // fail to load:\n              this.pageCache[route] = { error: err }\n              fire({ error: err })\n            })\n        } else {\n          // Development only. In production the page file is part of the build manifest\n          route = normalizeRoute(route)\n          let scriptRoute = getAssetPathFromRoute(route, '.js')\n\n          const url = `${this.assetPrefix}/_next/static/chunks/pages${encodeURI(\n            scriptRoute\n          )}`\n          loadScript(url).catch((err) => {\n            // Mark the page as failed to load if its script fails to load:\n            this.pageCache[route] = { error: err }\n            fire({ error: err })\n          })\n        }\n      }\n    })\n  }\n\n  // This method if called by the route code.\n  registerPage(route: string, regFn: () => any) {\n    const register = (styleSheets: StyleSheetTuple[]) => {\n      try {\n        const mod = regFn()\n        const pageData: PageCacheEntry = {\n          page: mod.default || mod,\n          mod,\n          styleSheets,\n        }\n        this.pageCache[route] = pageData\n        this.pageRegisterEvents.emit(route, pageData)\n      } catch (error) {\n        this.pageCache[route] = { error }\n        this.pageRegisterEvents.emit(route, { error })\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Wait for webpack to become idle if it's not.\n      // More info: https://github.com/vercel/next.js/pull/1511\n      if ((module as any).hot && (module as any).hot.status() !== 'idle') {\n        console.log(\n          `Waiting for webpack to become \"idle\" to initialize the page: \"${route}\"`\n        )\n\n        const check = (status: string) => {\n          if (status === 'idle') {\n            ;(module as any).hot.removeStatusHandler(check)\n            register(\n              /* css is handled via style-loader in development */\n              []\n            )\n          }\n        }\n        ;(module as any).hot.status(check)\n        return\n      }\n    }\n\n    function fetchStyleSheet(href: string): Promise<StyleSheetTuple> {\n      return fetch(href).then((res) => {\n        if (!res.ok) throw pageLoadError(href)\n        return res.text().then((text) => ({ href, text }))\n      })\n    }\n\n    const isInitialLoad = route === this.initialPage\n    const promisedDeps: Promise<StyleSheetTuple[]> =\n      // Shared styles will already be on the page:\n      route === '/_app' ||\n      // We use `style-loader` in development:\n      process.env.NODE_ENV !== 'production'\n        ? Promise.resolve([])\n        : // Tests that this does not block hydration:\n          // test/integration/css-fixtures/hydrate-without-deps/\n          (isInitialLoad\n            ? Promise.resolve(\n                looseToArray<HTMLLinkElement>(\n                  document.querySelectorAll('link[data-n-p]')\n                ).map((e) => e.getAttribute('href')!)\n              )\n            : this.getDependencies(route).then((deps) =>\n                deps.filter((d) => d.endsWith('.css'))\n              )\n          ).then((cssFiles) =>\n            // These files should've already been fetched by now, so this\n            // should resolve instantly.\n            Promise.all(cssFiles.map((d) => fetchStyleSheet(d))).catch(\n              (err) => {\n                if (isInitialLoad) return getInitialStylesheets()\n                throw err\n              }\n            )\n          )\n    promisedDeps.then(\n      (deps) => register(deps),\n      (error) => {\n        this.pageCache[route] = { error }\n        this.pageRegisterEvents.emit(route, { error })\n      }\n    )\n  }\n\n  /**\n   * @param {string} route\n   * @param {boolean} [isDependency]\n   */\n  prefetch(route: string, isDependency?: boolean): Promise<void> {\n    // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n    // License: Apache 2.0\n    let cn\n    if ((cn = (navigator as any).connection)) {\n      // Don't prefetch if using 2G or if Save-Data is enabled.\n      if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve()\n    }\n\n    /** @type {string} */\n    let url\n    if (isDependency) {\n      url = route\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        route = normalizeRoute(route)\n\n        const ext =\n          process.env.__NEXT_MODERN_BUILD && hasNoModule ? '.module.js' : '.js'\n        const scriptRoute = getAssetPathFromRoute(route, ext)\n\n        url = `${this.assetPrefix}/_next/static/${encodeURIComponent(\n          this.buildId\n        )}/pages${encodeURI(scriptRoute)}`\n      }\n    }\n\n    return Promise.all(\n      document.querySelector(`link[rel=\"${relPrefetch}\"][href^=\"${url}\"]`)\n        ? []\n        : [\n            url &&\n              appendLink(\n                url,\n                relPrefetch,\n                url.endsWith('.css') ? relPreloadStyle : 'script'\n              ),\n            process.env.NODE_ENV === 'production' &&\n              !isDependency &&\n              this.getDependencies(route).then((urls) =>\n                Promise.all(\n                  urls.map((dependencyUrl) =>\n                    this.prefetch(dependencyUrl, true)\n                  )\n                )\n              ),\n          ]\n    ).then(\n      // do not return any data\n      () => {},\n      // swallow prefetch errors\n      () => {}\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}