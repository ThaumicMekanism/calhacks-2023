{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.removePathTrailingSlash = removePathTrailingSlash;\nexports.normalizePathTrailingSlash = void 0; /**\n                                             * Removes the trailing slash of a path if there is one. Preserves the root path `/`.\n                                             */\nfunction removePathTrailingSlash(path) {\n  return path.endsWith('/') && path !== '/' ? path.slice(0, -1) : path;\n} /**\n  * Normalizes the trailing slash of a path according to the `trailingSlash` option\n  * in `next.config.js`.\n  */\nconst normalizePathTrailingSlash = process.env.__NEXT_TRAILING_SLASH ? path => {\n  if (/\\.[^/]+\\/?$/.test(path)) {\n    return removePathTrailingSlash(path);\n  } else if (path.endsWith('/')) {\n    return path;\n  } else {\n    return path + '/';\n  }\n} : removePathTrailingSlash;\nexports.normalizePathTrailingSlash = normalizePathTrailingSlash;","map":{"version":3,"sources":["../../client/normalize-trailing-slash.ts"],"names":["removePathTrailingSlash","path","endsWith","slice","normalizePathTrailingSlash","process","env","__NEXT_TRAILING_SLASH","test"],"mappings":";;;;4CAAA;;;AAGO,SAASA,uBAAT,CAAiCC,IAAjC,EAAuD;EAC5D,OAAOA,IAAI,CAACC,QAALD,CAAc,GAAdA,CAAAA,IAAsBA,IAAI,KAAK,GAA/BA,GAAqCA,IAAI,CAACE,KAALF,CAAW,CAAXA,EAAc,CAAC,CAAfA,CAArCA,GAAyDA,IAAhE;AACD,CAED;;;;AAIO,MAAMG,0BAA0B,GAAGC,OAAO,CAACC,GAARD,CAAYE,qBAAZF,GACrCJ,IAAD,IAA0B;EACxB,IAAI,aAAA,CAAcO,IAAd,CAAmBP,IAAnB,CAAJ,EAA8B;IAC5B,OAAOD,uBAAuB,CAACC,IAAD,CAA9B;EACD,CAFD,MAEO,IAAIA,IAAI,CAACC,QAALD,CAAc,GAAdA,CAAJ,EAAwB;IAC7B,OAAOA,IAAP;EACD,CAFM,MAEA;IACL,OAAOA,IAAI,GAAG,GAAd;EACD;AACF,CATqCI,GAUtCL,uBAVG","sourcesContent":["/**\n * Removes the trailing slash of a path if there is one. Preserves the root path `/`.\n */\nexport function removePathTrailingSlash(path: string): string {\n  return path.endsWith('/') && path !== '/' ? path.slice(0, -1) : path\n}\n\n/**\n * Normalizes the trailing slash of a path according to the `trailingSlash` option\n * in `next.config.js`.\n */\nexport const normalizePathTrailingSlash = process.env.__NEXT_TRAILING_SLASH\n  ? (path: string): string => {\n      if (/\\.[^/]+\\/?$/.test(path)) {\n        return removePathTrailingSlash(path)\n      } else if (path.endsWith('/')) {\n        return path\n      } else {\n        return path + '/'\n      }\n    }\n  : removePathTrailingSlash\n"]},"metadata":{},"sourceType":"script"}