{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.Container = Container;\nexports.createUrl = createUrl;\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _utils = require(\"../next-server/lib/utils\");\nexports.AppInitialProps = _utils.AppInitialProps;\nexports.NextWebVitalsMetric = _utils.NextWebVitalsMetric; /**\n                                                          * `App` component is used for initialize of pages. It allows for overwriting and full control of the `page` initialization.\n                                                          * This allows for keeping state between navigation, custom error handling, injecting additional data.\n                                                          */\nasync function appGetInitialProps({\n  Component,\n  ctx\n}) {\n  const pageProps = await (0, _utils.loadGetInitialProps)(Component, ctx);\n  return {\n    pageProps\n  };\n}\nclass App extends _react.default.Component {\n  // Kept here for backwards compatibility.\n  // When someone ended App they could call `super.componentDidCatch`.\n  // @deprecated This method is no longer needed. Errors are caught at the top level\n  componentDidCatch(error, _errorInfo) {\n    throw error;\n  }\n  render() {\n    const {\n      router,\n      Component,\n      pageProps,\n      __N_SSG,\n      __N_SSP\n    } = this.props;\n    return /*#__PURE__*/_react.default.createElement(Component, Object.assign({}, pageProps,\n    // we don't add the legacy URL prop if it's using non-legacy\n    // methods like getStaticProps and getServerSideProps\n    !(__N_SSG || __N_SSP) ? {\n      url: createUrl(router)\n    } : {}));\n  }\n}\nexports.default = App;\nApp.origGetInitialProps = appGetInitialProps;\nApp.getInitialProps = appGetInitialProps;\nlet warnContainer;\nlet warnUrl;\nif (true) {\n  warnContainer = (0, _utils.execOnce)(() => {\n    console.warn(`Warning: the \\`Container\\` in \\`_app\\` has been deprecated and should be removed. https://err.sh/vercel/next.js/app-container-deprecated`);\n  });\n  warnUrl = (0, _utils.execOnce)(() => {\n    console.error(`Warning: the 'url' property is deprecated. https://err.sh/vercel/next.js/url-deprecated`);\n  });\n} // @deprecated noop for now until removal\nfunction Container(p) {\n  if (true) warnContainer();\n  return p.children;\n}\nfunction createUrl(router) {\n  // This is to make sure we don't references the router object at call time\n  const {\n    pathname,\n    asPath,\n    query\n  } = router;\n  return {\n    get query() {\n      if (true) warnUrl();\n      return query;\n    },\n    get pathname() {\n      if (true) warnUrl();\n      return pathname;\n    },\n    get asPath() {\n      if (true) warnUrl();\n      return asPath;\n    },\n    back: () => {\n      if (true) warnUrl();\n      router.back();\n    },\n    push: (url, as) => {\n      if (true) warnUrl();\n      return router.push(url, as);\n    },\n    pushTo: (href, as) => {\n      if (true) warnUrl();\n      const pushRoute = as ? href : '';\n      const pushUrl = as || href;\n      return router.push(pushRoute, pushUrl);\n    },\n    replace: (url, as) => {\n      if (true) warnUrl();\n      return router.replace(url, as);\n    },\n    replaceTo: (href, as) => {\n      if (true) warnUrl();\n      const replaceRoute = as ? href : '';\n      const replaceUrl = as || href;\n      return router.replace(replaceRoute, replaceUrl);\n    }\n  };\n}","map":{"version":3,"sources":["../../pages/_app.tsx"],"names":["appGetInitialProps","Component","ctx","pageProps","App","React","origGetInitialProps","getInitialProps","componentDidCatch","error","_errorInfo","render","router","__N_SSG","__N_SSP","props","url","createUrl","warnContainer","warnUrl","console","warn","Container","p","children","pathname","asPath","query","back","push","as","pushTo","href","pushRoute","pushUrl","replace","replaceTo","replaceRoute","replaceUrl"],"mappings":"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","sourcesContent":["import React, { ErrorInfo } from 'react'\nimport {\n  execOnce,\n  loadGetInitialProps,\n  AppContextType,\n  AppInitialProps,\n  AppPropsType,\n  NextWebVitalsMetric,\n} from '../next-server/lib/utils'\nimport { Router } from '../client/router'\n\nexport { AppInitialProps }\n\nexport { NextWebVitalsMetric }\n\nexport type AppContext = AppContextType<Router>\n\nexport type AppProps<P = {}> = AppPropsType<Router, P>\n\n/**\n * `App` component is used for initialize of pages. It allows for overwriting and full control of the `page` initialization.\n * This allows for keeping state between navigation, custom error handling, injecting additional data.\n */\nasync function appGetInitialProps({\n  Component,\n  ctx,\n}: AppContext): Promise<AppInitialProps> {\n  const pageProps = await loadGetInitialProps(Component, ctx)\n  return { pageProps }\n}\n\nexport default class App<P = {}, CP = {}, S = {}> extends React.Component<\n  P & AppProps<CP>,\n  S\n> {\n  static origGetInitialProps = appGetInitialProps\n  static getInitialProps = appGetInitialProps\n\n  // Kept here for backwards compatibility.\n  // When someone ended App they could call `super.componentDidCatch`.\n  // @deprecated This method is no longer needed. Errors are caught at the top level\n  componentDidCatch(error: Error, _errorInfo: ErrorInfo): void {\n    throw error\n  }\n\n  render() {\n    const { router, Component, pageProps, __N_SSG, __N_SSP } = this\n      .props as AppProps<CP>\n\n    return (\n      <Component\n        {...pageProps}\n        {\n          // we don't add the legacy URL prop if it's using non-legacy\n          // methods like getStaticProps and getServerSideProps\n          ...(!(__N_SSG || __N_SSP) ? { url: createUrl(router) } : {})\n        }\n      />\n    )\n  }\n}\n\nlet warnContainer: () => void\nlet warnUrl: () => void\n\nif (process.env.NODE_ENV !== 'production') {\n  warnContainer = execOnce(() => {\n    console.warn(\n      `Warning: the \\`Container\\` in \\`_app\\` has been deprecated and should be removed. https://err.sh/vercel/next.js/app-container-deprecated`\n    )\n  })\n\n  warnUrl = execOnce(() => {\n    console.error(\n      `Warning: the 'url' property is deprecated. https://err.sh/vercel/next.js/url-deprecated`\n    )\n  })\n}\n\n// @deprecated noop for now until removal\nexport function Container(p: any) {\n  if (process.env.NODE_ENV !== 'production') warnContainer()\n  return p.children\n}\n\nexport function createUrl(router: Router) {\n  // This is to make sure we don't references the router object at call time\n  const { pathname, asPath, query } = router\n  return {\n    get query() {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      return query\n    },\n    get pathname() {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      return pathname\n    },\n    get asPath() {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      return asPath\n    },\n    back: () => {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      router.back()\n    },\n    push: (url: string, as?: string) => {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      return router.push(url, as)\n    },\n    pushTo: (href: string, as?: string) => {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      const pushRoute = as ? href : ''\n      const pushUrl = as || href\n\n      return router.push(pushRoute, pushUrl)\n    },\n    replace: (url: string, as?: string) => {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      return router.replace(url, as)\n    },\n    replaceTo: (href: string, as?: string) => {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      const replaceRoute = as ? href : ''\n      const replaceUrl = as || href\n\n      return router.replace(replaceRoute, replaceUrl)\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"script"}